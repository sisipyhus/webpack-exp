{
  "compilerOptions": {
    "target": "es5", // 指定编译后的ECMAScript目标版本： 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'
    "module": "esnext", // 用来指定要使用的模块标准: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'
    "strict": true, // 启用所有严格类型检查选项。
    "jsx": "preserve", // 指定jsx代码用于的开发环境: 'preserve', 'react-native', or 'react'
    "importHelpers": true, // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
    "moduleResolution": "node", // 用于选择模块解析策略，有'node'和'classic'两种类型'
    "experimentalDecorators": true, // 模块名到基于 baseUrl的路径映射的列表。
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "esModuleInterop": true, // 支持在 CommonJs 模块下使用 import d from 'cjs', 解决TypeScript 对于 CommonJs/AMD/UMD 模块与 ES6 模块处理方式相同导致的问题
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "sourceMap": true, // 生成相应的 .map文件。
    "baseUrl": ".", // 解析非相对模块名的基准目录, 相对模块不会受baseUrl的影响
    "paths": {
      // 用于设置模块名称到基于baseUrl的路径映射
      "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"] // lib用于指定要包含在编译中的库文件
  },
  "moduleResolution": "node",
  "include": ["src/**/*","./shims-vue.d.ts"],
  "exclude": [
    "node_modules",
    // other exclude patterns...
  ],
}
